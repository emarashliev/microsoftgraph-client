// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Get a user
    ///
    /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(getUser)`.
    func getUser(_ input: Operations.getUser.Input) async throws -> Operations.getUser.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get a user
    ///
    /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(getUser)`.
    public func getUser(headers: Operations.getUser.Input.Headers = .init()) async throws -> Operations.getUser.Output {
        try await getUser(Operations.getUser.Input(headers: headers))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    /// microsoft.graph
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://graph.microsoft.com/v1.0",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/Error`.
        public struct _Error: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Error/error`.
            public struct errorPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Error/error/code`.
                public var code: Swift.String
                /// - Remark: Generated from `#/components/schemas/Error/error/message`.
                public var message: Swift.String
                /// - Remark: Generated from `#/components/schemas/Error/error/target`.
                public var target: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Error/error/details`.
                public var details: [Components.Schemas.ErrorDetails]?
                /// - Remark: Generated from `#/components/schemas/Error/error/innerError`.
                public var innerError: Components.Schemas.InnerError?
                /// Creates a new `errorPayload`.
                ///
                /// - Parameters:
                ///   - code:
                ///   - message:
                ///   - target:
                ///   - details:
                ///   - innerError:
                public init(
                    code: Swift.String,
                    message: Swift.String,
                    target: Swift.String? = nil,
                    details: [Components.Schemas.ErrorDetails]? = nil,
                    innerError: Components.Schemas.InnerError? = nil
                ) {
                    self.code = code
                    self.message = message
                    self.target = target
                    self.details = details
                    self.innerError = innerError
                }
                public enum CodingKeys: String, CodingKey {
                    case code
                    case message
                    case target
                    case details
                    case innerError
                }
            }
            /// - Remark: Generated from `#/components/schemas/Error/error`.
            public var error: Components.Schemas._Error.errorPayload
            /// Creates a new `_Error`.
            ///
            /// - Parameters:
            ///   - error:
            public init(error: Components.Schemas._Error.errorPayload) {
                self.error = error
            }
            public enum CodingKeys: String, CodingKey {
                case error
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorDetails`.
        public struct ErrorDetails: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorDetails/code`.
            public var code: Swift.String
            /// - Remark: Generated from `#/components/schemas/ErrorDetails/message`.
            public var message: Swift.String
            /// - Remark: Generated from `#/components/schemas/ErrorDetails/target`.
            public var target: Swift.String?
            /// Creates a new `ErrorDetails`.
            ///
            /// - Parameters:
            ///   - code:
            ///   - message:
            ///   - target:
            public init(
                code: Swift.String,
                message: Swift.String,
                target: Swift.String? = nil
            ) {
                self.code = code
                self.message = message
                self.target = target
            }
            public enum CodingKeys: String, CodingKey {
                case code
                case message
                case target
            }
        }
        /// - Remark: Generated from `#/components/schemas/InnerError`.
        public struct InnerError: Codable, Hashable, Sendable {
            /// Request Id as tracked internally by the service
            ///
            /// - Remark: Generated from `#/components/schemas/InnerError/request-id`.
            public var request_hyphen_id: Swift.String?
            /// Client request Id as sent by the client application.
            ///
            /// - Remark: Generated from `#/components/schemas/InnerError/client-request-id`.
            public var client_hyphen_request_hyphen_id: Swift.String?
            /// Date when the error occured.
            ///
            /// - Remark: Generated from `#/components/schemas/InnerError/date`.
            public var date: Swift.String?
            /// Creates a new `InnerError`.
            ///
            /// - Parameters:
            ///   - request_hyphen_id: Request Id as tracked internally by the service
            ///   - client_hyphen_request_hyphen_id: Client request Id as sent by the client application.
            ///   - date: Date when the error occured.
            public init(
                request_hyphen_id: Swift.String? = nil,
                client_hyphen_request_hyphen_id: Swift.String? = nil,
                date: Swift.String? = nil
            ) {
                self.request_hyphen_id = request_hyphen_id
                self.client_hyphen_request_hyphen_id = client_hyphen_request_hyphen_id
                self.date = date
            }
            public enum CodingKeys: String, CodingKey {
                case request_hyphen_id = "request-id"
                case client_hyphen_request_hyphen_id = "client-request-id"
                case date
            }
        }
        /// - Remark: Generated from `#/components/schemas/User`.
        public struct User: Codable, Hashable, Sendable {
            /// The user principal name (UPN) of the user. The UPN is an Internet-style sign-in name for the user based on the Internet standard RFC 822. By convention, this value should map to the user's email name. The general format is alias@domain, where the domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property can't contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderby.
            ///
            /// - Remark: Generated from `#/components/schemas/User/userPrincipalName`.
            public var userPrincipalName: Swift.String?
            /// The name displayed in the address book for the user. This value is usually the combination of the user's first name, middle initial, and family name. This property is required when a user is created and it can't be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderby, and $search.
            ///
            /// - Remark: Generated from `#/components/schemas/User/displayName`.
            public var displayName: Swift.String?
            /// The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
            ///
            /// - Remark: Generated from `#/components/schemas/User/surname`.
            public var surname: Swift.String?
            /// If the entity is a person, this is the person's given name (first name).
            ///
            /// - Remark: Generated from `#/components/schemas/User/givenName`.
            public var givenName: Swift.String?
            /// An email for this entity.
            ///
            /// - Remark: Generated from `#/components/schemas/User/email`.
            public var email: Swift.String?
            /// The preferred language for the user. The preferred language format is based on RFC 4646. The name is a combination of an ISO 639 two-letter lowercase culture code associated with the language, and an ISO 3166 two-letter uppercase subculture code associated with the country or region. Example: 'en-US', or 'es-ES'. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
            ///
            /// - Remark: Generated from `#/components/schemas/User/preferredLanguage`.
            public var preferredLanguage: Swift.String?
            /// Mobile phone number of the contact.
            ///
            /// - Remark: Generated from `#/components/schemas/User/mobilePhone`.
            public var mobilePhone: Swift.String?
            /// The contact’s job title.
            ///
            /// - Remark: Generated from `#/components/schemas/User/jobTitle`.
            public var jobTitle: Swift.String?
            /// The contact's business phone numbers.
            ///
            /// - Remark: Generated from `#/components/schemas/User/businessPhones`.
            public var businessPhones: [Swift.String?]?
            /// Creates a new `User`.
            ///
            /// - Parameters:
            ///   - userPrincipalName: The user principal name (UPN) of the user. The UPN is an Internet-style sign-in name for the user based on the Internet standard RFC 822. By convention, this value should map to the user's email name. The general format is alias@domain, where the domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property can't contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderby.
            ///   - displayName: The name displayed in the address book for the user. This value is usually the combination of the user's first name, middle initial, and family name. This property is required when a user is created and it can't be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderby, and $search.
            ///   - surname: The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).
            ///   - givenName: If the entity is a person, this is the person's given name (first name).
            ///   - email: An email for this entity.
            ///   - preferredLanguage: The preferred language for the user. The preferred language format is based on RFC 4646. The name is a combination of an ISO 639 two-letter lowercase culture code associated with the language, and an ISO 3166 two-letter uppercase subculture code associated with the country or region. Example: 'en-US', or 'es-ES'. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values)
            ///   - mobilePhone: Mobile phone number of the contact.
            ///   - jobTitle: The contact’s job title.
            ///   - businessPhones: The contact's business phone numbers.
            public init(
                userPrincipalName: Swift.String? = nil,
                displayName: Swift.String? = nil,
                surname: Swift.String? = nil,
                givenName: Swift.String? = nil,
                email: Swift.String? = nil,
                preferredLanguage: Swift.String? = nil,
                mobilePhone: Swift.String? = nil,
                jobTitle: Swift.String? = nil,
                businessPhones: [Swift.String?]? = nil
            ) {
                self.userPrincipalName = userPrincipalName
                self.displayName = displayName
                self.surname = surname
                self.givenName = givenName
                self.email = email
                self.preferredLanguage = preferredLanguage
                self.mobilePhone = mobilePhone
                self.jobTitle = jobTitle
                self.businessPhones = businessPhones
            }
            public enum CodingKeys: String, CodingKey {
                case userPrincipalName
                case displayName
                case surname
                case givenName
                case email
                case preferredLanguage
                case mobilePhone
                case jobTitle
                case businessPhones
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {
        public struct error: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/error/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/error/content/application\/json`.
                case json(Components.Schemas._Error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas._Error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.error.Body
            /// Creates a new `error`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.error.Body) {
                self.body = body
            }
        }
    }
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Get a user
    ///
    /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(getUser)`.
    public enum getUser {
        public static let id: Swift.String = "getUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/me/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.getUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.getUser.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Successful: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/GET/responses/2XX/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/GET/responses/2XX/content/application\/json`.
                    case json(Components.Schemas.User)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.User {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.getUser.Output.Successful.Body
                /// Creates a new `Successful`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.getUser.Output.Successful.Body) {
                    self.body = body
                }
            }
            /// Retrieved entity
            ///
            /// - Remark: Generated from `#/paths//me/get(getUser)/responses/2XX`.
            ///
            /// HTTP response code: `200...299 successful`.
            case successful(statusCode: Swift.Int, Operations.getUser.Output.Successful)
            /// The associated value of the enum case if `self` is `.successful`.
            ///
            /// - Throws: An error if `self` is not `.successful`.
            /// - SeeAlso: `.successful`.
            public var successful: Operations.getUser.Output.Successful {
                get throws {
                    switch self {
                    case let .successful(_, response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "successful",
                            response: self
                        )
                    }
                }
            }
            /// error
            ///
            /// - Remark: Generated from `#/paths//me/get(getUser)/responses/4XX`.
            ///
            /// HTTP response code: `400...499 clientError`.
            case clientError(statusCode: Swift.Int, Components.Responses.error)
            /// The associated value of the enum case if `self` is `.clientError`.
            ///
            /// - Throws: An error if `self` is not `.clientError`.
            /// - SeeAlso: `.clientError`.
            public var clientError: Components.Responses.error {
                get throws {
                    switch self {
                    case let .clientError(_, response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "clientError",
                            response: self
                        )
                    }
                }
            }
            /// error
            ///
            /// - Remark: Generated from `#/paths//me/get(getUser)/responses/5XX`.
            ///
            /// HTTP response code: `500...599 serverError`.
            case serverError(statusCode: Swift.Int, Components.Responses.error)
            /// The associated value of the enum case if `self` is `.serverError`.
            ///
            /// - Throws: An error if `self` is not `.serverError`.
            /// - SeeAlso: `.serverError`.
            public var serverError: Components.Responses.error {
                get throws {
                    switch self {
                    case let .serverError(_, response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serverError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
